<?php
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º api config
    include_once $_SERVER['DOCUMENT_ROOT'] . '/debug/config/api.php';
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º user
    include_once $_SERVER['DOCUMENT_ROOT'] . '/debug/objects/user.php';

    function onMessageCreated($message) {
        // –°–æ–∑–¥–∞—ë–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
        $response_message = null;
        $isUsed = false;

        $user = new User($message->user_id);
        $countUse = $user->getCountUse();
        $isMember = $user->isMember();

        // –ü–æ–ª—É—á–∞–µ–º voice_messages
        $voice_messages = findVoiceMessages(array($message));
        $voice_count = count($voice_messages);
        if ($voice_count == 0) { // –ï—Å–ª–∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –≤–æ–æ–±—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
            $response_message = "–ì–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã :(";
        } 
        else if ($countUse >= 11 && !$isMember) {
            if ($voice_count == 1) {
                $response_message = "–Ø –Ω–∞—à–µ–ª –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.";
                $response_message .= " –ù–æ —è –µ–≥–æ —Ç–µ–±–µ –Ω–µ –¥–∞–º!";
            }
            else {
                $response_message = "–Ø –Ω–∞—à–µ–ª $voice_count –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.";
                $response_message .= " –ù–æ —è –∏—Ö —Ç–µ–±–µ –Ω–µ –¥–∞–º!";
            }
            
            $response_message .= " –°—Ç–æ–ª—å–∫–æ —Ä–∞–∑ –ø–æ–º–æ–≥, –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –º–µ–Ω—è.";
            $response_message .= " –ò —è —Å–Ω–æ–≤–∞ –ø—Ä–æ–¥–æ–ª–∂—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–±–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≥—Å :)";
        }
        else if ($voice_count == 1) { // –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫—Ä–∞—Ç–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
            $response_message = "–°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É –≥—Å:\n" . $voice_messages[0]->voice_link;

            $isUsed = true;
        } 
        else {
            // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ id –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π –≥—Å
            $senders_id = '';
            foreach ($voice_messages as &$voice_message) {
                if (strpos($senders_id, $voice_message->sender_id)) continue;
                $senders_id = $senders_id . $voice_message->sender_id . ',';
            }
            
            // –° –ø–æ–º–æ—â—å—é users.get –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è—Ö
            $request_params = array(
                'user_ids' => $senders_id,
                'name_case' => 'gen',
                'access_token' => TOKEN,
                'v' => '5.130'
            );

            $url = "https://api.vk.com/method/users.get?" . http_build_query($request_params); 
            $response = json_decode(file_get_contents($url))->response; 
            
            // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º–µ–Ω–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤    
            $users_name = array();
            foreach ($response as &$user_info) {
                $users_name[$user_info->id] = $user_info->first_name;
            }
            
            $response_message = "–ù–∞–π–¥–µ–Ω–æ $voice_count –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.\n";
            for ($i = 0; $i < $voice_count; $i++) {
                // –ü–æ–ª—É—á–∞–µ–º VoiceMessage
                $voice_message = $voice_messages[$i];
                // –°—á–∏—Ç–∞–µ–º –ø–æ—Ä—è–¥–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏—è
                $number = $i + 1;
                // –°–æ–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
                $response_message .= "$number. –û—Ç " . $users_name[$voice_message->sender_id] . "\n";
                $response_message .= $voice_message->voice_link . "\n\n";
            }

            $isUsed = true;
        }

        // –° –ø–æ–º–æ—â—å—é messages.send –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        $request_params = array(
            'message' => $response_message,
            'peer_id' => $user->id,
            'access_token' => TOKEN,
            'v' => '5.130',
            'random_id' => '0'
        );
    
        $get_params = http_build_query($request_params);
        file_get_contents('https://api.vk.com/method/messages.send?'. $get_params);

        // –ï—Å–ª–∏ –≤—Å–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ, –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã,
        // —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –±–æ—Ç–∞
        if ($isUsed) intercaseCountUse($user, $countUse);   
    }

    function intercaseCountUse($user, $countUse) {
        // –£–≤–µ–ª–∏—á–µ–≤–∞–µ–º –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        $user->increaseCountUse();

        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω –∑–∞–≤–µ—Ä—à–∞–µ–º –º–µ—Ç–æ–¥
        if ($isMember) return; 

        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ—â–µ  –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ 
        // –æ –ø—Ä–æ—Å—å–±–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –µ—Å–ª–∏ –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –±–æ—Ç–∞ 1, 5 –∏–ª–∏ 10 —Ä–∞–∑
        $message = null;
        switch ($countUse + 1) {
            case 1:
                $message = "–ï—Å–ª–∏ —è —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –º–µ–Ω—è –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ :)";
                break;
            case 5:
                $message = "–ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å –≤–æ–æ–±—â–µ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç –¥–µ–Ω—å–≥–∏ –∑–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—è.";
                $message .= " –ï–º—É –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±—ã–ª–æ –±—ã –æ–¥–Ω–æ–≥–æ, –µ—Å–ª–∏ —Ç—ã –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –±—ã –Ω–∞ –º–µ–Ω—è :)";
                break;
            case 10:
                $message = "–Ø —Ç–µ–±–µ —Å—Ç–æ–ª—å–∫–æ —Ä–∞–∑ –ø–æ–º–æ–≥, –∞ —Ç—ã –¥–∞–∂–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –º–µ–Ω—è.\n–ù—É –≤—Å–µ! üò†\n";
                $message .= "–Ø –æ–±–∏–¥–µ–ª—Å—è –Ω–∞ —Ç–µ–±—è, –∏ –±–æ–ª—å—à–µ –Ω–µ –¥–∞–º —Ç–µ–±–µ —Å—Å—ã–ª–∫—É –ø–æ–∫–∞ —Ç—ã –Ω–µ –ø–æ–¥–ø–∏—à–µ—à—å—Å—è –Ω–∞ –º–µ–Ω—è!";
                break;
        }
        
        if ($message == null) return;

        // –° –ø–æ–º–æ—â—å—é messages.send –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ—Å—å–±–µ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
        $request_params = array(
            'message' => $message,
            'peer_id' => $user->id,
            'access_token' => TOKEN,
            'v' => '5.130',
            'random_id' => '0'
        );

        $get_params = http_build_query($request_params);
        file_get_contents('https://api.vk.com/method/messages.send?'. $get_params);
    }
    
    function findVoiceMessages($messages): Array {
        $voice_messages = array();

        foreach ($messages as &$message) {
            if (isset($message->attachments)) {
                foreach ($message->attachments as &$attachment) {
                    if (!isset($attachment->doc->preview->audio_msg->link_mp3)) continue;
                        
                    $voice_messages[] = new VoiceMessage($message->user_id, $attachment->doc->preview->audio_msg->link_mp3);
                }
            }

            if (isset($message->fwd_messages)) {
                $voice_messages = array_merge($voice_messages, findVoiceMessages($message->fwd_messages));
            }
        }

        return $voice_messages;
    }

    class VoiceMessage {
        public $sender_id = null;
        public $voice_link = null;

        public function __construct($sender_id, $voice_link) {
            $this->sender_id = $sender_id;
            $this->voice_link = $voice_link;
        }
    }
?>